************************TRANSFER STATEMENT**************************
a. break
=> We can use break statement in 3 places:
i. Inside Switch to stop fallthrough
For eg: int x = 0;
        switch(x){
          case 0: 
            Sopln(0);
          case 1: 
            Sopln(1);
          case 2: 
            Sopln(2);
          default: 
            Sopln("invalid choice");
        }

ii. Inside Loops
For eg: for(int i = 0; i<10; i++){
  if(i==5){
    break;
  }
  Sopln(i);
}

iii. Inside Labeled blocks
=>  to break block execution based on some condition
For example:
class Program{
    public static void main(String[] args) {
        int x =10;
        l1:  //without this label, if code is compiled, compile-time error will occur saying break outside of switch or loop.
        {
            System.out.println("hello");
            if(x==10){
                break l1;
            }
            System.out.println("world");
        }
        System.out.println("end of main");
        
    }
}
//output: hello end of main



b. continue statement
=> We can use continue statement only inside loops to skip current iteration and continue next for the iteration.
We can use continue statement only inside loops. If we are using anywhere else we will get compile-time error , saying continue outside of loop.
For example:
for(int i = 0;i<=10;i++){
  if(i%2==0){
    continue;
  }
  System.out.println(i);
}
//output:1,3,5,7,9


NOTES: We can use labelled break and continue to break or continue a particular loop in nested loops.
For example:
l1:
for(){
  l2:
  for(){
    for(){
        break;  //this is terminate the inner loop
        break l2; //this will terminate the l2 loop and go inside of l1 labelled loop.
        break l1; //this will terminate the l1 loop and go outside of l1 labelled loop.
    }
  }
}

